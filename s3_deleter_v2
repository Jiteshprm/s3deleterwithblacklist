import boto3
import pyarrow.parquet as pq
from io import BytesIO

def is_empty(file_content):
    return not file_content

def is_parquet(file_content):
    try:
        pq.read_table(BytesIO(file_content))
        return True
    except:
        return False

def contains_cdh(creator):
    return "cdh" in creator

def process_file(bucket_name, folder_name, file_name):
    s3 = boto3.client('s3')
    
    # Download file from S3
    response = s3.get_object(Bucket=bucket_name, Key=f"{folder_name}/{file_name}")
    file_content = response['Body'].read()

    # Check if the file is empty
    if is_empty(file_content):
        return True

    # Check if the file is a Parquet file
    if not is_parquet(file_content):
        return True

    # Read Parquet file and check if the creator string contains "cdh"
    parquet_file = pq.read_table(BytesIO(file_content))
    creator = parquet_file.schema.metadata.get('creator', '')
    return contains_cdh(creator)

def main(bucket_name, folder_name):
    s3 = boto3.client('s3')

    # List all files in the specified folder
    response = s3.list_objects(Bucket=bucket_name, Prefix=folder_name)

    for file_obj in response.get('Contents', []):
        file_name = file_obj['Key'].split('/')[-1]
        result = process_file(bucket_name, folder_name, file_name)
        print(f"{file_name}: {result}")

if __name__ == "__main__":
    # Replace 'your-bucket-name' and 'your-folder-name' with your actual S3 bucket and folder names
    bucket_name = 'your-bucket-name'
    folder_name = 'your-folder-name'
    main(bucket_name, folder_name)
